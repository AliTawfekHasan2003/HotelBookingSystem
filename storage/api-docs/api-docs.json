{
    "openapi": "3.0.0",
    "info": {
        "title": "Hotel Booking System APIs",
        "version": "1.0.0"
    },
    "paths": {
        "/api/{role}/dashboard/rooms": {
            "post": {
                "tags": [
                    "Dashboard/Rooms"
                ],
                "summary": "Store New Room",
                "description": "Store room",
                "operationId": "storeRoom",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "description": "Room details",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "room_type_id",
                                    "view_en",
                                    "view_ar",
                                    "description_en",
                                    "description_ar",
                                    "floor",
                                    "number",
                                    "image"
                                ],
                                "properties": {
                                    "room_type_id": {
                                        "description": "Required. Must exist in the room types table.",
                                        "type": "integer",
                                        "example": 23
                                    },
                                    "view_en": {
                                        "description": "Required. Must start with a Latin character and can contain Latin characters, digits, underscores (_), dots (.), and commas (,). Length: min=3.",
                                        "type": "string",
                                        "example": "City View"
                                    },
                                    "view_ar": {
                                        "description": "Required. Must start with a Arabic character and can contain Arabic characters, digits, underscores(_), dots(.), and commas(،). Length: min=3.",
                                        "type": "string",
                                        "example": "إطلالة على المدينة"
                                    },
                                    "description_en": {
                                        "description": "Required. Must start with a Latin character and can contain Latin characters, digits, underscores (_), dots (.), and commas (,). Length: min=10.",
                                        "type": "string",
                                        "example": "A cozy standard room featuring a comfortable double bed, a private bathroom, and a workspace. Ideal for business travelers and short stays"
                                    },
                                    "description_ar": {
                                        "description": "Required. Must start with a Arabic character and can contain Arabic characters, digits, underscores(_), dots(.), and commas(،). Length: min=10.",
                                        "type": "string",
                                        "example": "غرفة قياسية مريحة تحتوي على سرير مزدوج مريح، حمام خاص، ومنطقة عمل. مثالية للمسافرين من رجال الأعمال والإقامات القصيرة"
                                    },
                                    "floor": {
                                        "description": "Required. The combination of floor and room number must be unique.Number of room. Length: min=1, max=50.",
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "number": {
                                        "description": "Required. The combination of floor and room number must be unique. Length: min=1, max=50.",
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "image": {
                                        "description": "Required. Image file. Max size: 2MB.",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Room created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "New room created successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "room": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "room_type_id": {
                                                    "type": "integer",
                                                    "example": 23
                                                },
                                                "floor": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "view": {
                                                    "type": "string",
                                                    "example": "City View"
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "\\/storage\\/Image\\/rooms\\/1733570972_202858.jpg"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "A cozy standard room featuring a comfortable double bed, a private bathroom, and a workspace. Ideal for business travelers and short stays"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "properties": {
                                                "room_type_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The provided room type does not exist in our records."
                                                    }
                                                },
                                                "view_en": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must start with a Latin character and can contain Latin characters, digits, underscores (_), dots (.), and commas (,)."
                                                    }
                                                },
                                                "view_ar": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must start with a Arabic character and can contain Arabic characters, digits, underscores(_), dots(.), and commas(،)."
                                                    }
                                                },
                                                "description_en": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must start with a Latin character and can contain Latin characters, digits, underscores (_), dots (.), and commas (,)."
                                                    }
                                                },
                                                "description_ar": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must start with a Arabic character and can contain Arabic characters, digits, underscores(_), dots(.), and commas(،)."
                                                    }
                                                },
                                                "number": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The combination of floor and room number must be unique."
                                                    }
                                                },
                                                "floor": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The combination of floor and room number must be unique."
                                                    }
                                                },
                                                "image": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must be an image."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable access this section",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Admins and Super Admins only can access this section."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "An unexpected error occurred, Please try again later."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{role}/dashboard/rooms/{id}": {
            "post": {
                "tags": [
                    "Dashboard/Rooms"
                ],
                "summary": "Update Room",
                "description": "Update room",
                "operationId": "updateRoom",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Room ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "description": "Room details.",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "room_type_id": {
                                        "description": "Nullable. Must exist in the room types table.",
                                        "type": "integer",
                                        "example": 23
                                    },
                                    "view_en": {
                                        "description": "Nullable. Must start with a Latin character and can contain Latin characters, digits, underscores (_), dots (.), and commas (,). Length: min=3.",
                                        "type": "string",
                                        "example": "City View"
                                    },
                                    "view_ar": {
                                        "description": "Nullable. Must start with a Arabic character and can contain Arabic characters, digits, underscores(_), dots(.), and commas(،). Length: min=3.",
                                        "type": "string",
                                        "example": "إطلالة على المدينة"
                                    },
                                    "description_en": {
                                        "description": "Nullable. Must start with a Latin character and can contain Latin characters, digits, underscores (_), dots (.), and commas (,). Length: min=10.",
                                        "type": "string",
                                        "example": "A cozy standard room featuring a comfortable double bed, a private bathroom, and a workspace. Ideal for business travelers and short stays"
                                    },
                                    "description_ar": {
                                        "description": "Nullable. Must start with a Arabic character and can contain Arabic characters, digits, underscores(_), dots(.), and commas(،). Length: min=10.",
                                        "type": "string",
                                        "example": "غرفة قياسية مريحة تحتوي على سرير مزدوج مريح، حمام خاص، ومنطقة عمل. مثالية للمسافرين من رجال الأعمال والإقامات القصيرة"
                                    },
                                    "floor": {
                                        "description": "Nullable. The combination of floor and room number must be unique.Number of room. Length: min=1, max=50.",
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "number": {
                                        "description": "Nullable. The combination of floor and room number must be unique. Length: min=1, max=50.",
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "image": {
                                        "description": "Nullable. Image file. Max size: 2MB.",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "_method": {
                                        "description": "Override method to PATCH",
                                        "type": "string",
                                        "default": "Patch"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Room updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room updated successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "room": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "room_type_id": {
                                                    "type": "integer",
                                                    "example": 23
                                                },
                                                "floor": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "view": {
                                                    "type": "string",
                                                    "example": "City View"
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "\\/storage\\/Image\\/rooms\\/1733570972_202858.jpg"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "A cozy standard room featuring a comfortable double bed, a private bathroom, and a workspace. Ideal for business travelers and short stays"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "properties": {
                                                "room_type_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The provided room type does not exist in our records."
                                                    }
                                                },
                                                "view_en": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must start with a Latin character and can contain Latin characters, digits, underscores (_), dots (.), and commas (,)."
                                                    }
                                                },
                                                "view_ar": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must start with a Arabic character and can contain Arabic characters, digits, underscores(_), dots(.), and commas(،)."
                                                    }
                                                },
                                                "description_en": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must start with a Latin character and can contain Latin characters, digits, underscores (_), dots (.), and commas (,)."
                                                    }
                                                },
                                                "description_ar": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must start with a Arabic character and can contain Arabic characters, digits, underscores(_), dots(.), and commas(،)."
                                                    }
                                                },
                                                "number": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The combination of floor and room number must be unique."
                                                    }
                                                },
                                                "floor": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The combination of floor and room number must be unique."
                                                    }
                                                },
                                                "image": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must be an image."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable access this section",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Admins and Super Admins only can access this section."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Room not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "An unexpected error occurred, Please try again later."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Dashboard/Rooms"
                ],
                "summary": "Soft Delete Room",
                "description": "Soft delete room",
                "operationId": "softDeleteRoom",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Room ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Room deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room deleted successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "This room is booked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Can’t delete, this room is booked"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 409
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable access this section",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Admins and Super Admins only can access this section."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Room not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unable to delete this room type."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{role}/dashboard/room_types": {
            "post": {
                "tags": [
                    "Dashboard/RoomTypes"
                ],
                "summary": "Store New Room Type",
                "description": "Store room type",
                "operationId": "storeRoomType",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "description": "Room type details",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name_en",
                                    "name_ar",
                                    "category_en",
                                    "category_ar",
                                    "description_en",
                                    "description_ar",
                                    "capacity",
                                    "daily_price",
                                    "monthly_price",
                                    "image"
                                ],
                                "properties": {
                                    "name_en": {
                                        "description": "Required. Must start with a Latin character and can contain Latin characters, digits, underscores (_), dots (.), and commas (,). Length: min=3.",
                                        "type": "string",
                                        "example": "Luxury Rooms"
                                    },
                                    "name_ar": {
                                        "description": "Required. Must start with a Arabic character and can contain Arabic characters, digits, underscores(_), dots(.), and commas(،). Length: min=3.",
                                        "type": "string",
                                        "example": "غرف فاخرة"
                                    },
                                    "category_en": {
                                        "description": "Required. Must start with a Latin character and can contain Latin characters, digits, underscores (_), dots (.), and commas (,). Length: min=3.",
                                        "type": "string",
                                        "example": "Suite"
                                    },
                                    "category_ar": {
                                        "description": "Required. Must start with a Arabic character and can contain Arabic characters, digits, underscores(_), dots(.), and commas(،). Length: min=3.",
                                        "type": "string",
                                        "example": "جناح"
                                    },
                                    "description_en": {
                                        "description": "Required. Must start with a Latin character and can contain Latin characters, digits, underscores (_), dots (.), and commas (,). Length: min=10.",
                                        "type": "string",
                                        "example": "A spacious rooms with modern amenities"
                                    },
                                    "description_ar": {
                                        "description": "Required. Must start with a Arabic character and can contain Arabic characters, digits, underscores(_), dots(.), and commas(،). Length: min=10.",
                                        "type": "string",
                                        "example": "غرف واسعة مع وسائل الراحة الحديثة"
                                    },
                                    "capacity": {
                                        "description": "Required. Number of guests. Length: min=1, max=10.",
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "daily_price": {
                                        "description": "Required. Must have exactly 2 decimal places. Price per day for all rooms that belong to this type. Length: min=1.00 max=999999.99",
                                        "type": "number",
                                        "format": "float",
                                        "example": 120.56
                                    },
                                    "monthly_price": {
                                        "description": "Required.Must have exactly 2 decimal places. Price per month for all rooms that belong to this type. Length: min=1.00 max=999999.99",
                                        "type": "number",
                                        "format": "float",
                                        "example": 1120.56
                                    },
                                    "image": {
                                        "description": "Required. Image file. Max size: 2MB.",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Room type created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "New room type created successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "roomType": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Luxury Rooms"
                                                },
                                                "category": {
                                                    "type": "string",
                                                    "example": "Suite"
                                                },
                                                "capacity": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "\\/storage\\/Image\\/room_types\\/1733570972_202858.jpg"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "A spacious rooms with modern amenities"
                                                },
                                                "count_rooms": {
                                                    "type": "integer",
                                                    "example": 4
                                                },
                                                "daily_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 120.56
                                                },
                                                "monthly_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1120.56
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "properties": {
                                                "name_en": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must start with a Latin character and can contain Latin characters, digits, underscores (_), dots (.), and commas (,)."
                                                    }
                                                },
                                                "name_ar": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must start with a Arabic character and can contain Arabic characters, digits, underscores(_), dots(.), and commas(،)."
                                                    }
                                                },
                                                "category_en": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must start with a Latin character and can contain Latin characters, digits, underscores (_), dots (.), and commas (,)."
                                                    }
                                                },
                                                "category_ar": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must start with a Arabic character and can contain Arabic characters, digits, underscores(_), dots(.), and commas(،)."
                                                    }
                                                },
                                                "description_en": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must start with a Latin character and can contain Latin characters, digits, underscores (_), dots (.), and commas (,)."
                                                    }
                                                },
                                                "description_ar": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must start with a Arabic character and can contain Arabic characters, digits, underscores(_), dots(.), and commas(،)."
                                                    }
                                                },
                                                "capacity": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The capacity must not exceed 10 persone."
                                                    }
                                                },
                                                "daily_price": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must be numeric and must have exactly 2 decimal places."
                                                    }
                                                },
                                                "monthly_price": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must be numeric and must have exactly 2 decimal places."
                                                    }
                                                },
                                                "image": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must be an image."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable access this section",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Admins and Super Admins only can access this section."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "An unexpected error occurred, Please try again later."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{role}/dashboard/room_types/{id}": {
            "post": {
                "tags": [
                    "Dashboard/RoomTypes"
                ],
                "summary": "Update Room Type",
                "description": "Update room type",
                "operationId": "updateRoomType",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Room type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "description": "Room type details.",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name_en": {
                                        "description": "Nullable. Must start with a Latin character and can contain Latin characters, digits, underscores (_), dots (.), and commas (,). Length: min=3.",
                                        "type": "string",
                                        "example": "Luxury Rooms"
                                    },
                                    "name_ar": {
                                        "description": "Nullable. Must start with a Arabic character and can contain Arabic characters, digits, underscores(_), dots(.), and commas(،). Length: min=3.",
                                        "type": "string",
                                        "example": "غرف فاخرة"
                                    },
                                    "category_en": {
                                        "description": "Nullable. Must start with a Latin character and can contain Latin characters, digits, underscores (_), dots (.), and commas (,). Length: min=3.",
                                        "type": "string",
                                        "example": "Suite"
                                    },
                                    "category_ar": {
                                        "description": "Nullable. Must start with a Arabic character and can contain Arabic characters, digits, underscores(_), dots(.), and commas(،). Length: min=3.",
                                        "type": "string",
                                        "example": "جناح"
                                    },
                                    "description_en": {
                                        "description": "Nullable. Must start with a Latin character and can contain Latin characters, digits, underscores (_), dots (.), and commas (,). Length: min=10.",
                                        "type": "string",
                                        "example": "A spacious rooms with modern amenities"
                                    },
                                    "description_ar": {
                                        "description": "Nullable. Must start with a Arabic character and can contain Arabic characters, digits, underscores(_), dots(.), and commas(،). Length: min=10.",
                                        "type": "string",
                                        "example": "غرف واسعة مع وسائل الراحة الحديثة"
                                    },
                                    "capacity": {
                                        "description": "Nullable. Number of guests. Length: min=1, max=10.",
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "daily_price": {
                                        "description": "Nullable. Must have exactly 2 decimal places. Price per day for all rooms that belong to this type. Length: min=1.00 max=999999.99",
                                        "type": "number",
                                        "format": "float",
                                        "example": 120.56
                                    },
                                    "monthly_price": {
                                        "description": "Nullable.Must have exactly 2 decimal places. Price per month for all rooms that belong to this type. Length: min=1.00 max=999999.99",
                                        "type": "number",
                                        "format": "float",
                                        "example": 1120.56
                                    },
                                    "image": {
                                        "description": "Nullable. Image file. Max size: 2MB.",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "_method": {
                                        "description": "Override method to PATCH",
                                        "type": "string",
                                        "default": "Patch"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Room type updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room type updated successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "roomType": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Luxury Rooms"
                                                },
                                                "category": {
                                                    "type": "string",
                                                    "example": "Suite"
                                                },
                                                "capacity": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "\\/storage\\/Image\\/room_types\\/1733570972_202858.jpg"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "A spacious rooms with modern amenities"
                                                },
                                                "count_rooms": {
                                                    "type": "integer",
                                                    "example": 4
                                                },
                                                "daily_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 120.56
                                                },
                                                "monthly_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1120.56
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "properties": {
                                                "name_en": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must start with a Latin character and can contain Latin characters, digits, underscores (_), dots (.), and commas (,)."
                                                    }
                                                },
                                                "name_ar": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must start with a Arabic character and can contain Arabic characters, digits, underscores(_), dots(.), and commas(،)."
                                                    }
                                                },
                                                "category_en": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must start with a Latin character and can contain Latin characters, digits, underscores (_), dots (.), and commas (,)."
                                                    }
                                                },
                                                "category_ar": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must start with a Arabic character and can contain Arabic characters, digits, underscores(_), dots(.), and commas(،)."
                                                    }
                                                },
                                                "description_en": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must start with a Latin character and can contain Latin characters, digits, underscores (_), dots (.), and commas (,)."
                                                    }
                                                },
                                                "description_ar": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must start with a Arabic character and can contain Arabic characters, digits, underscores(_), dots(.), and commas(،)."
                                                    }
                                                },
                                                "capacity": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The capacity must not exceed 10 persone."
                                                    }
                                                },
                                                "daily_price": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must be numeric and must have exactly 2 decimal places."
                                                    }
                                                },
                                                "monthly_price": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must be numeric and must have exactly 2 decimal places."
                                                    }
                                                },
                                                "image": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must be an image."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable access this section",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Admins and Super Admins only can access this section."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Room Type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room type not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "An unexpected error occurred, Please try again later."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Dashboard/RoomTypes"
                ],
                "summary": "Soft Delete Room Type",
                "description": "Soft delete room type",
                "operationId": "softDeleteRoomType",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Room type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Room type deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room type deleted successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "This room type has rooms",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unable to delete a room type before deleting all its rooms."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 409
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable access this section",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Admins and Super Admins only can access this section."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Room type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room type not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unable to delete this room type."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{role}/dashboard/room_type_services": {
            "post": {
                "tags": [
                    "Dashboard/RoomTypeServices"
                ],
                "summary": "Assign Service To Room Type",
                "description": "Assign service to room type",
                "operationId": "assignServiceToRoomType",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "room_type_id",
                                    "service_id"
                                ],
                                "properties": {
                                    "room_type_id": {
                                        "description": "Required. Must exist in the room types table.",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "service_id": {
                                        "description": "Required. Must exist in the services table.",
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Service assigned to room Type successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Service assigned to room Type successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "properties": {
                                                "room_type_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The provided room type does not exist in our records."
                                                    }
                                                },
                                                "service_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The provided service does not exist in our records."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable access this section",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Admins and Super Admins only can access this section."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Service has already been assigned to room type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Service has already been assigned to room type."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 409
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Dashboard/RoomTypeServices"
                ],
                "summary": "Revoke Service From Room Type",
                "description": "Assign service to room type",
                "operationId": "revokeServiceFromRoomType",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "room_type_id",
                                    "service_id"
                                ],
                                "properties": {
                                    "room_type_id": {
                                        "description": "Required. Must exist in the room types table.",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "service_id": {
                                        "description": "Required. Must exist in the services table.",
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Service revoked from room Type successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Service revoked from room Type successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "properties": {
                                                "room_type_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The provided room type does not exist in our records."
                                                    }
                                                },
                                                "service_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The provided service does not exist in our records."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable access this section",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Admins and Super Admins only can access this section."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "This service not assign to room type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "This service not assign to room type."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 409
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{role}/dashboard/services": {
            "post": {
                "tags": [
                    "Dashboard/Services"
                ],
                "summary": "Store New Service",
                "description": "Store service",
                "operationId": "storeService",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "description": "Service details",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name_en",
                                    "name_ar",
                                    "category_en",
                                    "category_ar",
                                    "description_en",
                                    "description_ar",
                                    "is_limited",
                                    "is_free",
                                    "image"
                                ],
                                "properties": {
                                    "name_en": {
                                        "description": "Required. Must start with a Latin character and can contain Latin characters, digits, underscores (_), dots (.), and commas (,). Length: min=3.",
                                        "type": "string",
                                        "example": "Spa Treatment"
                                    },
                                    "name_ar": {
                                        "description": "Required. Must start with a Arabic character and can contain Arabic characters, digits, underscores(_), dots(.), and commas(،). Length: min=3.",
                                        "type": "string",
                                        "example": "علاج سبا"
                                    },
                                    "category_en": {
                                        "description": "Required. Must start with a Latin character and can contain Latin characters, digits, underscores (_), dots (.), and commas (,). Length: min=3.",
                                        "type": "string",
                                        "example": "Wellness"
                                    },
                                    "category_ar": {
                                        "description": "Required. Must start with a Arabic character and can contain Arabic characters, digits, underscores(_), dots(.), and commas(،). Length: min=3.",
                                        "type": "string",
                                        "example": "عافية"
                                    },
                                    "description_en": {
                                        "description": "Required. Must start with a Latin character and can contain Latin characters, digits, underscores (_), dots (.), and commas (,). Length: min=10.",
                                        "type": "string",
                                        "example": "A relaxing 60_minute spa session with aromatherapy oils and expert massage techniques"
                                    },
                                    "description_ar": {
                                        "description": "Required. Must start with a Arabic character and can contain Arabic characters, digits, underscores(_), dots(.), and commas(،). Length: min=10.",
                                        "type": "string",
                                        "example": "جلسة سبا مريحة لمدة 60 دقيقة مع زيوت العلاج العطري وتقنيات التدليك الاحترافية"
                                    },
                                    "is_limited": {
                                        "description": "Required.",
                                        "type": "boolean",
                                        "enum": [
                                            1,
                                            0
                                        ],
                                        "example": 1
                                    },
                                    "total_units": {
                                        "description": "Required if is_limited=true. If is_limited = false must be 0. Length: if is_limited=true => min=1,.",
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "is_free": {
                                        "description": "Required.",
                                        "type": "boolean",
                                        "enum": [
                                            1,
                                            0
                                        ],
                                        "example": 0
                                    },
                                    "daily_price": {
                                        "description": "Must have exactly 2 decimal places. Required if is_free=false. If is_free=false must be 0.00 . Length: if is_free=true => min=1.00 max=999999.99",
                                        "type": "number",
                                        "format": "float",
                                        "example": 120.56
                                    },
                                    "monthly_price": {
                                        "description": "Must have exactly 2 decimal places. Required if is_free=false. If is_free=false must be 0.00 . Length: if is_free=true => min=1.00 max=999999.99",
                                        "type": "number",
                                        "format": "float",
                                        "example": 1120.56
                                    },
                                    "image": {
                                        "description": "Required. Image file. Max size: 2MB.",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Service created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "New service created successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "service": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Spa Treatment"
                                                },
                                                "category": {
                                                    "type": "string",
                                                    "example": "Wellness"
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "\\/storage\\/Image\\/services\\/1733570972_202858.jpg"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "A relaxing 60_minute spa session with aromatherapy oils and expert massage techniques"
                                                },
                                                "is_limited": {
                                                    "type": "boolean",
                                                    "example": 1
                                                },
                                                "total_units": {
                                                    "description": "Total units for service if its limited",
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "is_free": {
                                                    "type": "boolean",
                                                    "example": 0
                                                },
                                                "daily_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 120.56
                                                },
                                                "monthly_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1120.56
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "properties": {
                                                "name_en": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must start with a Latin character and can contain Latin characters, digits, underscores (_), dots (.), and commas (,)."
                                                    }
                                                },
                                                "name_ar": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must start with a Arabic character and can contain Arabic characters, digits, underscores(_), dots(.), and commas(،)."
                                                    }
                                                },
                                                "category_en": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must start with a Latin character and can contain Latin characters, digits, underscores (_), dots (.), and commas (,)."
                                                    }
                                                },
                                                "category_ar": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must start with a Arabic character and can contain Arabic characters, digits, underscores(_), dots(.), and commas(،)."
                                                    }
                                                },
                                                "description_en": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must start with a Latin character and can contain Latin characters, digits, underscores (_), dots (.), and commas (,)."
                                                    }
                                                },
                                                "description_ar": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must start with a Arabic character and can contain Arabic characters, digits, underscores(_), dots(.), and commas(،)."
                                                    }
                                                },
                                                "is_limited": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must be a boolean value."
                                                    }
                                                },
                                                "total_units": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field is required."
                                                    }
                                                },
                                                "is_free": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must be a boolean value."
                                                    }
                                                },
                                                "daily_price": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field is required."
                                                    }
                                                },
                                                "monthly_price": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field is required."
                                                    }
                                                },
                                                "image": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must be an image."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable access this section",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Admins and Super Admins only can access this section."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "An unexpected error occurred, Please try again later."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{role}/dashboard/services/{id}": {
            "post": {
                "tags": [
                    "Dashboard/Services"
                ],
                "summary": "Update Service",
                "description": "Update service",
                "operationId": "updateService",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "description": "Service details.",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name_en": {
                                        "description": "Nullable. Must start with a Latin character and can contain Latin characters, digits, underscores (_), dots (.), and commas (,). Length: min=3.",
                                        "type": "string",
                                        "example": "Spa Treatment"
                                    },
                                    "name_ar": {
                                        "description": "Nullable. Must start with a Arabic character and can contain Arabic characters, digits, underscores(_), dots(.), and commas(،). Length: min=3.",
                                        "type": "string",
                                        "example": "علاج سبا"
                                    },
                                    "category_en": {
                                        "description": "Nullable. Must start with a Latin character and can contain Latin characters, digits, underscores (_), dots (.), and commas (,). Length: min=3.",
                                        "type": "string",
                                        "example": "Wellness"
                                    },
                                    "category_ar": {
                                        "description": "Nullable. Must start with a Arabic character and can contain Arabic characters, digits, underscores(_), dots(.), and commas(،). Length: min=3.",
                                        "type": "string",
                                        "example": "عافية"
                                    },
                                    "description_en": {
                                        "description": "Nullable. Must start with a Latin character and can contain Latin characters, digits, underscores (_), dots (.), and commas (,). Length: min=10.",
                                        "type": "string",
                                        "example": "A relaxing 60_minute spa session with aromatherapy oils and expert massage techniques"
                                    },
                                    "description_ar": {
                                        "description": "Nullable. Must start with a Arabic character and can contain Arabic characters, digits, underscores(_), dots(.), and commas(،). Length: min=10.",
                                        "type": "string",
                                        "example": "جلسة سبا مريحة لمدة 60 دقيقة مع زيوت العلاج العطري وتقنيات التدليك الاحترافية"
                                    },
                                    "is_limited": {
                                        "description": "Nullable.",
                                        "type": "boolean",
                                        "enum": [
                                            1,
                                            0
                                        ],
                                        "example": 1
                                    },
                                    "total_units": {
                                        "description": "Required if is_limited=true. If is_limited = false must be 0. Length: if is_limited=true => min=1,.",
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "is_free": {
                                        "description": "Nullable.",
                                        "type": "boolean",
                                        "enum": [
                                            1,
                                            0
                                        ],
                                        "example": 0
                                    },
                                    "daily_price": {
                                        "description": "Must have exactly 2 decimal places. Required if is_free=false. If is_free=false must be 0.00 . Length: if is_free=true => min=1.00 max=999999.99",
                                        "type": "number",
                                        "format": "float",
                                        "example": 120.56
                                    },
                                    "monthly_price": {
                                        "description": "Must have exactly 2 decimal places. Required if is_free=false. If is_free=false must be 0.00 . Length: if is_free=true => min=1.00 max=999999.99",
                                        "type": "number",
                                        "format": "float",
                                        "example": 1120.56
                                    },
                                    "image": {
                                        "description": "Nullable. Image file. Max size: 2MB.",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "_method": {
                                        "description": "Override method to PATCH",
                                        "type": "string",
                                        "default": "Patch"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Service updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Service updated successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "service": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Spa Treatment"
                                                },
                                                "category": {
                                                    "type": "string",
                                                    "example": "Wellness"
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "\\/storage\\/Image\\/services\\/1733570972_202858.jpg"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "A relaxing 60_minute spa session with aromatherapy oils and expert massage techniques"
                                                },
                                                "is_limited": {
                                                    "type": "boolean",
                                                    "example": 1
                                                },
                                                "total_units": {
                                                    "description": "Total units for service if its limited",
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "is_free": {
                                                    "type": "boolean",
                                                    "example": 0
                                                },
                                                "daily_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 120.56
                                                },
                                                "monthly_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1120.56
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "properties": {
                                                "name_en": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must start with a Latin character and can contain Latin characters, digits, underscores (_), dots (.), and commas (,)."
                                                    }
                                                },
                                                "name_ar": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must start with a Arabic character and can contain Arabic characters, digits, underscores(_), dots(.), and commas(،)."
                                                    }
                                                },
                                                "category_en": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must start with a Latin character and can contain Latin characters, digits, underscores (_), dots (.), and commas (,)."
                                                    }
                                                },
                                                "category_ar": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must start with a Arabic character and can contain Arabic characters, digits, underscores(_), dots(.), and commas(،)."
                                                    }
                                                },
                                                "description_en": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must start with a Latin character and can contain Latin characters, digits, underscores (_), dots (.), and commas (,)."
                                                    }
                                                },
                                                "description_ar": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must start with a Arabic character and can contain Arabic characters, digits, underscores(_), dots(.), and commas(،)."
                                                    }
                                                },
                                                "is_limited": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must be a boolean value."
                                                    }
                                                },
                                                "total_units": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field is required."
                                                    }
                                                },
                                                "is_free": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must be a boolean value."
                                                    }
                                                },
                                                "daily_price": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field is required."
                                                    }
                                                },
                                                "monthly_price": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field is required."
                                                    }
                                                },
                                                "image": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must be an image."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable access this section",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Admins and Super Admins only can access this section."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Service not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "An unexpected error occurred, Please try again later."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Dashboard/Services"
                ],
                "summary": "Soft Delete Service",
                "description": "Soft delete service",
                "operationId": "softDeleteService",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Service deleted successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "This service is booked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Can’t delete, this service is booked."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 409
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable access this section",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Admins and Super Admins only can access this section."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Service not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unable to delete this service."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{role}/dashboard/services/{id}/unavailable_dates": {
            "get": {
                "tags": [
                    "Dashboard/Services"
                ],
                "summary": "Get Unavailable Dates",
                "description": "List of unavailable dates for service",
                "operationId": "getUnavailableDatesForService",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get unavailable dates for service successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unavailable dates for this service fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "unavailableDates": {
                                            "description": "List of unavailable dates for service",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "start_date": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-01-12T00:00:00.000000Z"
                                                    },
                                                    "end_date": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-02-22T00:00:00.000000Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable access this section",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Admins and Super Admins only can access this section."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found or No unavailable dates found for service.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "No unavailable dates found for this service."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "This service is not limited",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "This service is not limited."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 409
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{role}/dashboard/users": {
            "get": {
                "tags": [
                    "Dashboard/Users"
                ],
                "summary": "Get List Of Users",
                "description": "Get all verified users details with 10 pagination",
                "operationId": "getUsers",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get all verified users details successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "All verified users details fetched successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "users": {
                                            "description": "List of verified users details",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "full_name": {
                                                        "type": "string",
                                                        "example": "Ali Hasan"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "Ali@gmail.com"
                                                    },
                                                    "email_verified_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-11-06T15:16:50.000000Z"
                                                    },
                                                    "role": {
                                                        "type": "string",
                                                        "example": "admin"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-10-20T12:26:39.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-11-17T12:17:20.000000Z"
                                                    },
                                                    "verification_attempts": {
                                                        "type": "integer",
                                                        "example": 0
                                                    },
                                                    "last_verification_attempt_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": null,
                                                        "nullable": true
                                                    },
                                                    "social_accounts": {
                                                        "description": "Data about social accounts linked to the orginal acount",
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "description": "ID Associated item.",
                                                                    "type": "integer",
                                                                    "example": 27
                                                                },
                                                                "user_id": {
                                                                    "type": "integer",
                                                                    "example": "1"
                                                                },
                                                                "social_id": {
                                                                    "type": "string",
                                                                    "example": "102026955083455787072"
                                                                },
                                                                "social_name": {
                                                                    "type": "string",
                                                                    "example": "google"
                                                                },
                                                                "role": {
                                                                    "type": "string",
                                                                    "example": "admin"
                                                                },
                                                                "created_at": {
                                                                    "type": "string",
                                                                    "format": "date-time",
                                                                    "example": "2024-10-20T12:26:39.000000Z"
                                                                },
                                                                "updated_at": {
                                                                    "type": "string",
                                                                    "format": "date-time",
                                                                    "example": "2024-11-17T12:17:20.000000Z"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "meta": {
                                                    "properties": {
                                                        "currentPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "lastPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "perPage": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 5
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "links": {
                                                    "properties": {
                                                        "currentPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        },
                                                        "previousPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "nextPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "lastPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found any user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Users not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable access this section",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Admins and Super Admins only can access this section."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{role}/dashboard/users/{id}": {
            "get": {
                "tags": [
                    "Dashboard/Users"
                ],
                "summary": "Get User Details",
                "operationId": "getUser",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get verified user details successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "User details fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "full_name": {
                                                    "type": "string",
                                                    "example": "Ali Hasan"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "Ali@gmail.com"
                                                },
                                                "email_verified_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-06T15:16:50.000000Z"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "admin"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-10-20T12:26:39.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-17T12:17:20.000000Z"
                                                },
                                                "verification_attempts": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "last_verification_attempt_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "social_accounts": {
                                                    "description": "Data about social accounts linked to the orginal acount",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "description": "ID Associated item.",
                                                                "type": "integer",
                                                                "example": 27
                                                            },
                                                            "user_id": {
                                                                "type": "integer",
                                                                "example": "1"
                                                            },
                                                            "social_id": {
                                                                "type": "string",
                                                                "example": "102026955083455787072"
                                                            },
                                                            "social_name": {
                                                                "type": "string",
                                                                "example": "google"
                                                            },
                                                            "role": {
                                                                "type": "string",
                                                                "example": "admin"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-10-20T12:26:39.000000Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-11-17T12:17:20.000000Z"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "User not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable access this section",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Admins and Super Admins only can access this section."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login",
                "operationId": "login",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "description": "User login credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "Required. Must exist in the users table. Length: min=11, max=64.",
                                        "type": "string",
                                        "format": "email",
                                        "example": "alihasan@gmail.com"
                                    },
                                    "password": {
                                        "description": "Required. Length: min=8, max=20.",
                                        "type": "string",
                                        "example": "Ali@333222"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Logged in successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "user": {
                                            "description": "Details of the authenticated user.",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "full_name": {
                                                    "type": "string",
                                                    "example": "Ali Hasan"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "Ali@gmail.com"
                                                },
                                                "email_verified_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-06T15:16:50.000000Z"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "admin"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-10-20T12:26:39.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-17T12:17:20.000000Z"
                                                },
                                                "verification_attempts": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "last_verification_attempt_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": null,
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "authorisation": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL2xvZ2luIiwiaWF0IjoxNzM3MjM0OTYxLCJleHAiOjE3MzcyMzg1NjEsIm5iZiI6MTczNzIzNDk2MSwianRpIjoiRjBkcXh1NDJYeU9wYlBLSCIsInN1YiI6IjEiLCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.i3yO1CtVklzMRu1opuQBSUat-vPppBvh7qHyZviU8H0"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "bearer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The provided email does not exist in our records."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Password or email is invalid."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register A New User",
                "operationId": "registerUser",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "description": "User registration details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "first_name": {
                                        "description": "Required. Must start with an Arabic or Latin character and can contain Arabic or Latin characters, digits, and underscores (_). Length: min=3, max=15.",
                                        "type": "string",
                                        "example": "ali"
                                    },
                                    "last_name": {
                                        "description": "Required. Must start with an Arabic or Latin character and can contain Arabic or Latin characters, digits, and underscores (_). Length: min=3, max=15.",
                                        "type": "string",
                                        "example": "hasan"
                                    },
                                    "email": {
                                        "description": "Required. Must end with @gmail.com domain. Must not already exist in the users table. Length: min=11, max=64.",
                                        "type": "string",
                                        "format": "email",
                                        "example": "alihasan@gmail.com"
                                    },
                                    "password": {
                                        "description": "Required. Must contain at least one lowercase letter, one uppercase letter, one numeric digit, and one special character (*, @, ., -, +, #, &). Length: min=8, max=20.",
                                        "type": "string",
                                        "example": "Ali@333222"
                                    },
                                    "password_confirmation": {
                                        "description": "Must match the password.",
                                        "type": "string",
                                        "example": "Ali@333222"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Account created successfully, Please check your email to verify your account."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "properties": {
                                                "first_name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The first name must start with an Arabic or Latin character and can contain Arabic or Latin characters, digits, and underscores(_)."
                                                    }
                                                },
                                                "last_name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The last name must start with an Arabic or Latin character and can contain Arabic or Latin characters, digits, and underscores(_)."
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email address has already been taken."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password must contain at least one lowercase letter, one uppercase letter, one numeric digit, and one special character."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Logout successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Logged out successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh",
                "operationId": "refresh",
                "responses": {
                    "200": {
                        "description": "Session refreshed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Session refreshed successfully.."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "user": {
                                            "description": "Details of the authenticated user.",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "full_name": {
                                                    "type": "string",
                                                    "example": "Ali Hasan"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "Ali@gmail.com"
                                                },
                                                "email_verified_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-06T15:16:50.000000Z"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "admin"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-10-20T12:26:39.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-17T12:17:20.000000Z"
                                                },
                                                "verification_attempts": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "last_verification_attempt_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": null,
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "authorisation": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL2xvZ2luIiwiaWF0IjoxNzM3MjM0OTYxLCJleHAiOjE3MzcyMzg1NjEsIm5iZiI6MTczNzIzNDk2MSwianRpIjoiRjBkcXh1NDJYeU9wYlBLSCIsInN1YiI6IjEiLCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.i3yO1CtVklzMRu1opuQBSUat-vPppBvh7qHyZviU8H0"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "bearer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/email/verify/{id}": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify Email Address",
                "description": "Verifies the user's email address.",
                "operationId": "verifyEmail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The user ID to verify his email address",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Your email verified successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Your email verified successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid signature.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Verification link expired, Please request a new one."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "User not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Your email already verified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Your email already verified."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 409
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/email/verify/resend": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Resend Verification Email",
                "operationId": "ResendVerificationEmail",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "description": "User email address",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "Required. Must exist in the users table..Length: min=11, max=64.",
                                        "type": "string",
                                        "format": "email",
                                        "example": "alihasan@gmail.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Resend verification email successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "A verification email has been sent to your email successfully, Please verify your email address to verify your account."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The provided email does not exist in our records."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "User not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Your email already verified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Your email already verified."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 409
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded the maximum number of attempts.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "You have exceeded the maximum number of attempts, Please wait few minutes before trying again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 429
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/google": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Redirect To Google For Authentication",
                "operationId": "redirectToGoogle",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirect to Google authentication page"
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "An unexpected error occurred, Please try again later."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/google/callback": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Handle Google OAuth2 Callback",
                "operationId": "googleCallback",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Register by your google account successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "A new account has been successfully created and linked with your google account."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "user": {
                                            "description": "Details of the authenticated user.",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "full_name": {
                                                    "type": "string",
                                                    "example": "Ali Hasan"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "Ali@gmail.com"
                                                },
                                                "email_verified_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-06T15:16:50.000000Z"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "admin"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-10-20T12:26:39.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-17T12:17:20.000000Z"
                                                },
                                                "verification_attempts": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "last_verification_attempt_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": null,
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "authorisation": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL2xvZ2luIiwiaWF0IjoxNzM3MjM0OTYxLCJleHAiOjE3MzcyMzg1NjEsIm5iZiI6MTczNzIzNDk2MSwianRpIjoiRjBkcXh1NDJYeU9wYlBLSCIsInN1YiI6IjEiLCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.i3yO1CtVklzMRu1opuQBSUat-vPppBvh7qHyZviU8H0"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "bearer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Login by your google account successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Successfully logged in using google."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "user": {
                                            "description": "Details of the authenticated user.",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "full_name": {
                                                    "type": "string",
                                                    "example": "Ali Hasan"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "Ali@gmail.com"
                                                },
                                                "email_verified_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-06T15:16:50.000000Z"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "admin"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-10-20T12:26:39.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-17T12:17:20.000000Z"
                                                },
                                                "verification_attempts": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "last_verification_attempt_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": null,
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "authorisation": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL2xvZ2luIiwiaWF0IjoxNzM3MjM0OTYxLCJleHAiOjE3MzcyMzg1NjEsIm5iZiI6MTczNzIzNDk2MSwianRpIjoiRjBkcXh1NDJYeU9wYlBLSCIsInN1YiI6IjEiLCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.i3yO1CtVklzMRu1opuQBSUat-vPppBvh7qHyZviU8H0"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "bearer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Email or Name is missing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Email or Name is missing. Please ensure that email and name permissions are enabled in your social account settings, then try again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "An unexpected error occurred, Please try again later."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/github": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Redirect To Github For Authentication",
                "operationId": "redirectToGithub",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirect to Github authentication page"
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "An unexpected error occurred, Please try again later."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/github/callback": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Handle Github OAuth2 Callback",
                "operationId": "githubCallback",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Register by your github account successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "A new account has been successfully created and linked with your github account."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "user": {
                                            "description": "Details of the authenticated user.",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "full_name": {
                                                    "type": "string",
                                                    "example": "Ali Hasan"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "Ali@gmail.com"
                                                },
                                                "email_verified_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-06T15:16:50.000000Z"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "admin"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-10-20T12:26:39.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-17T12:17:20.000000Z"
                                                },
                                                "verification_attempts": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "last_verification_attempt_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": null,
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "authorisation": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL2xvZ2luIiwiaWF0IjoxNzM3MjM0OTYxLCJleHAiOjE3MzcyMzg1NjEsIm5iZiI6MTczNzIzNDk2MSwianRpIjoiRjBkcXh1NDJYeU9wYlBLSCIsInN1YiI6IjEiLCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.i3yO1CtVklzMRu1opuQBSUat-vPppBvh7qHyZviU8H0"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "bearer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Login by your github account successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Successfully logged in using github."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "user": {
                                            "description": "Details of the authenticated user.",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "full_name": {
                                                    "type": "string",
                                                    "example": "Ali Hasan"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "Ali@gmail.com"
                                                },
                                                "email_verified_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-06T15:16:50.000000Z"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "admin"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-10-20T12:26:39.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-17T12:17:20.000000Z"
                                                },
                                                "verification_attempts": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "last_verification_attempt_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": null,
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "authorisation": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL2xvZ2luIiwiaWF0IjoxNzM3MjM0OTYxLCJleHAiOjE3MzcyMzg1NjEsIm5iZiI6MTczNzIzNDk2MSwianRpIjoiRjBkcXh1NDJYeU9wYlBLSCIsInN1YiI6IjEiLCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.i3yO1CtVklzMRu1opuQBSUat-vPppBvh7qHyZviU8H0"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "bearer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Email or Name is missing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Email or Name is missing. Please ensure that email and name permissions are enabled in your social account settings, then try again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "An unexpected error occurred, Please try again later."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/{role}/rooms": {
            "get": {
                "tags": [
                    "Rooms"
                ],
                "summary": "Get List Of Rooms",
                "description": "Get all rooms with 10 pagination",
                "operationId": "getRooms",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (user, admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "user",
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Filter by number.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "floor",
                        "in": "query",
                        "description": "Filter by floor",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "view",
                        "in": "query",
                        "description": "Filter by view",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get rooms successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Rooms fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "rooms": {
                                            "description": "List of rooms",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "room_type_id": {
                                                        "type": "integer",
                                                        "example": 23
                                                    },
                                                    "floor": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "number": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "view": {
                                                        "type": "string",
                                                        "example": "Sea view"
                                                    },
                                                    "image": {
                                                        "type": "string",
                                                        "example": "\\/storage\\/Image\\/rooms\\/1733570972_202858.jpg"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "dddddddddddddddddddddddddddddddddddddddddd"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "meta": {
                                                    "properties": {
                                                        "currentPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "lastPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "perPage": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 5
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "links": {
                                                    "properties": {
                                                        "currentPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        },
                                                        "previousPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "nextPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "lastPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No rooms found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "No rooms found matching the given criteria."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{role}/rooms/{id}": {
            "get": {
                "tags": [
                    "Rooms"
                ],
                "summary": "Show Room",
                "description": "Get room",
                "operationId": "showRoom",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (user, admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "user",
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Room ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get room successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "room": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "room_type_id": {
                                                    "type": "integer",
                                                    "example": 23
                                                },
                                                "floor": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "view": {
                                                    "type": "string",
                                                    "example": "Sea view"
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "\\/storage\\/Image\\/rooms\\/1733570972_202858.jpg"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "dddddddddddddddddddddddddddddddddddddddddd"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Room not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{role}/rooms/{id}/unavailable_dates": {
            "get": {
                "tags": [
                    "Rooms"
                ],
                "summary": "Get Unavailable Dates",
                "description": "List of unavailable dates for room",
                "operationId": "getUnavailableDatesForRoom",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (user, admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "user",
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Room ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get unavailable dates for room successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unavailable dates for this room fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "unavailableDates": {
                                            "description": "List of unavailable dates for room",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "start_date": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-01-12T00:00:00.000000Z"
                                                    },
                                                    "end_date": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-02-22T00:00:00.000000Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Room not found or No unavailable dates found for room.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "No unavailable dates found for this room."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{role}/room_types": {
            "get": {
                "tags": [
                    "Room Types"
                ],
                "summary": "Get List Of Room Types",
                "description": "Get all room types with 10 pagination",
                "operationId": "getRoomTypes",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (user, admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "user",
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "capacity",
                        "in": "query",
                        "description": "Filter by capacity.",
                        "required": false,
                        "schema": {
                            "description": " Get room types that have a capacity greater than or equal to the given value",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter by category",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get room types successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room types fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "roomTypes": {
                                            "description": "List of room types",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "royal rooms"
                                                    },
                                                    "category": {
                                                        "type": "string",
                                                        "example": "master"
                                                    },
                                                    "capacity": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "image": {
                                                        "type": "string",
                                                        "example": "\\/storage\\/Image\\/room_types\\/1733570972_202858.jpg"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "dddddddddddddddddddddddddddddddddddddddddd"
                                                    },
                                                    "count_rooms": {
                                                        "type": "integer",
                                                        "example": 4
                                                    },
                                                    "daily_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 12222.45
                                                    },
                                                    "monthly_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 33333
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "meta": {
                                                    "properties": {
                                                        "currentPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "lastPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "perPage": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 5
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "links": {
                                                    "properties": {
                                                        "currentPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        },
                                                        "previousPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "nextPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "lastPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No room types found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "No room types found matching the given criteria."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{role}/room_types/{id}": {
            "get": {
                "tags": [
                    "Room Types"
                ],
                "summary": "Show Room Type",
                "description": "Get room type",
                "operationId": "showRoomType",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (user, admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "user",
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Room type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get room type successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room type fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "roomType": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "royal rooms"
                                                },
                                                "category": {
                                                    "type": "string",
                                                    "example": "master"
                                                },
                                                "capacity": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "\\/storage\\/Image\\/room_types\\/1733570972_202858.jpg"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "dddddddddddddddddddddddddddddddddddddddddd"
                                                },
                                                "count_rooms": {
                                                    "type": "integer",
                                                    "example": 4
                                                },
                                                "daily_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 12222.45
                                                },
                                                "monthly_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 33333
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Room type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room type not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{role}/room_types/{id}/rooms": {
            "get": {
                "tags": [
                    "Room Types"
                ],
                "summary": "Get List Of Rooms That Belong To Specific Room Type",
                "description": "Get all rooms that belong to specific room type with 10 pagination",
                "operationId": "getRoomsForType",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (user, admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "user",
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Room type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Rooms for this type successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Rooms for this type fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "rooms": {
                                            "description": "List of rooms",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "room_type_id": {
                                                        "type": "integer",
                                                        "example": 23
                                                    },
                                                    "floor": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "number": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "view": {
                                                        "type": "string",
                                                        "example": "Sea view"
                                                    },
                                                    "image": {
                                                        "type": "string",
                                                        "example": "\\/storage\\/Image\\/rooms\\/1733570972_202858.jpg"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "dddddddddddddddddddddddddddddddddddddddddd"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "meta": {
                                                    "properties": {
                                                        "currentPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "lastPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "perPage": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 5
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "links": {
                                                    "properties": {
                                                        "currentPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        },
                                                        "previousPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "nextPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "lastPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not room type or rooms for this type found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "No rooms found for this type."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{role}/room_types/{id}/services": {
            "get": {
                "tags": [
                    "Room Types"
                ],
                "summary": "Get List Of Services That Assigned To Specific Room Type",
                "description": "Get all services that assigned to specific room type with 10 pagination",
                "operationId": "getservicesForType",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (user, admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "user",
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Room type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get services for this type successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Services for this type fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "services": {
                                            "description": "List of services",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "parking service"
                                                    },
                                                    "category": {
                                                        "type": "string",
                                                        "example": "cars"
                                                    },
                                                    "image": {
                                                        "type": "string",
                                                        "example": "\\/storage\\/Image\\/services\\/1733570972_202858.jpg"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "dddddddddddddddddddddddddddddddddddddddddd"
                                                    },
                                                    "is_limited": {
                                                        "type": "boolean",
                                                        "example": 1
                                                    },
                                                    "total_units": {
                                                        "description": "Total units for service if its limited",
                                                        "type": "integer",
                                                        "example": 7
                                                    },
                                                    "is_free": {
                                                        "type": "boolean",
                                                        "example": 1
                                                    },
                                                    "daily_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 12222.45
                                                    },
                                                    "monthly_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 33333
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "meta": {
                                                    "properties": {
                                                        "currentPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "lastPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "perPage": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 5
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "links": {
                                                    "properties": {
                                                        "currentPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        },
                                                        "previousPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "nextPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "lastPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not room type or services for this type found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "No services found for this type."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{role}/services": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get List Of Services",
                "description": "Get all services with 10 pagination",
                "operationId": "getServices",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (user, admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "user",
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "is_limited",
                        "in": "query",
                        "description": "Filter by limited.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                1,
                                0
                            ]
                        }
                    },
                    {
                        "name": "is_free",
                        "in": "query",
                        "description": "Filter by free",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                1,
                                0
                            ]
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter by category",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get services successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Services fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "services": {
                                            "description": "List of services",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "parking service"
                                                    },
                                                    "category": {
                                                        "type": "string",
                                                        "example": "cars"
                                                    },
                                                    "image": {
                                                        "type": "string",
                                                        "example": "\\/storage\\/Image\\/services\\/1733570972_202858.jpg"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "dddddddddddddddddddddddddddddddddddddddddd"
                                                    },
                                                    "is_limited": {
                                                        "type": "boolean",
                                                        "example": 1
                                                    },
                                                    "total_units": {
                                                        "description": "Total units for service if its limited",
                                                        "type": "integer",
                                                        "example": 7
                                                    },
                                                    "is_free": {
                                                        "type": "boolean",
                                                        "example": 1
                                                    },
                                                    "daily_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 12222.45
                                                    },
                                                    "monthly_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 33333.1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "meta": {
                                                    "properties": {
                                                        "currentPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "lastPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "perPage": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 5
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "links": {
                                                    "properties": {
                                                        "currentPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        },
                                                        "previousPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "nextPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "lastPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No services found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "No services found matching the given criteria."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{role}/services/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Show Service",
                "description": "Get service",
                "operationId": "showService",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (user, admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "user",
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get service successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Service fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "service": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "parking service"
                                                },
                                                "category": {
                                                    "type": "string",
                                                    "example": "cars"
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "\\/storage\\/Image\\/services\\/1733570972_202858.jpg"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "dddddddddddddddddddddddddddddddddddddddddd"
                                                },
                                                "is_limited": {
                                                    "type": "boolean",
                                                    "example": 1
                                                },
                                                "total_units": {
                                                    "description": "Total units for service if its limited",
                                                    "type": "integer",
                                                    "example": 7
                                                },
                                                "is_free": {
                                                    "type": "boolean",
                                                    "example": 1
                                                },
                                                "daily_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 12222.45
                                                },
                                                "monthly_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 33333
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Service not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{role}/services/{id}/room_types": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get List Of Room Types Associated With Specific Service",
                "description": "Get all room types associated with specific service with 10 pagination",
                "operationId": "getRoomTypesForService",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (user, admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "user",
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get all room types associated with this service successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room types associated with this service fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "roomTypes": {
                                            "description": "List of room types",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "royal rooms"
                                                    },
                                                    "category": {
                                                        "type": "string",
                                                        "example": "master"
                                                    },
                                                    "capacity": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "image": {
                                                        "type": "string",
                                                        "example": "\\/storage\\/Image\\/room_types\\/1733570972_202858.jpg"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "dddddddddddddddddddddddddddddddddddddddddd"
                                                    },
                                                    "count_rooms": {
                                                        "type": "integer",
                                                        "example": 4
                                                    },
                                                    "daily_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 12222.45
                                                    },
                                                    "monthly_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 33333.9
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "meta": {
                                                    "properties": {
                                                        "currentPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "lastPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "perPage": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 5
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "links": {
                                                    "properties": {
                                                        "currentPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        },
                                                        "previousPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "nextPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "lastPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No service or room types associated with this service found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "No room types associated with this service were found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{role}/services/{id}/available_units": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get Number Available Units For Specific Service",
                "description": "Get number available units during a period for a limited service",
                "operationId": "getNumberAvailableUnitsForService",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (user, admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "user",
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Limited service ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date of period",
                        "required": true,
                        "schema": {
                            "description": "Required. Must be a valid date in Y-m-d format and must be after today's date.",
                            "type": "string",
                            "format": "date",
                            "example": "2025-12-01"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date of period",
                        "required": true,
                        "schema": {
                            "description": "Required. Must be a valid date in Y-m-d format and must be after the start_date.",
                            "type": "string",
                            "format": "date",
                            "example": "2025-12-10"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get number of available units for this service during specified period successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Number of available units for this service fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "countAvailableServiceUnits": {
                                            "type": "integer",
                                            "example": 5
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "properties": {
                                                "start_date": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The start date must be after today."
                                                    }
                                                },
                                                "end_date": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The end date must be after start date."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Service not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "This service is not limited",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "This service is not limited."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 409
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{role}/settings/profile": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get Profile Details",
                "operationId": "getProfile",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (user, admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "user",
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get profile details successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Your profile details fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "profile": {
                                            "description": "Details of the profile",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "Ali"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Hasan"
                                                },
                                                "full_name": {
                                                    "type": "string",
                                                    "example": "Ali Hasan"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "Ali@gmail.com"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "user"
                                                },
                                                "social_accounts": {
                                                    "description": "List of social accounts name",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "google"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Settings"
                ],
                "summary": "Update Profile Details",
                "operationId": "updateProfile",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (user, admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "user",
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "description": "Data for updating profile",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "description": "Nullable.Must start with an Arabic or Latin character and can contain Arabic or Latin characters, digits, and underscores (_). Length: min=3, max=15.",
                                        "type": "string",
                                        "example": "ali"
                                    },
                                    "last_name": {
                                        "description": "Nullable.Must start with an Arabic or Latin character and can contain Arabic or Latin characters, digits, and underscores (_). Length: min=3, max=15.",
                                        "type": "string",
                                        "example": "hasan"
                                    },
                                    "email": {
                                        "description": "Nullable.Must end with @gmail.com domain. Must not already exist in the users table. Length: min=11, max=64.",
                                        "type": "string",
                                        "format": "email",
                                        "example": "alihasan@gmail.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update profile details successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Your profile details updated successfully. Please check your new email to confirm it. We also recommend updating your email in any linked social media account."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "profile": {
                                            "description": "Details of the profile",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "Ali"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Hasan"
                                                },
                                                "full_name": {
                                                    "type": "string",
                                                    "example": "Ali Hasan"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "Ali@gmail.com"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "user"
                                                },
                                                "social_accounts": {
                                                    "description": "List of social accounts name",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "google"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "properties": {
                                                "first_name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The first name must start with an Arabic or Latin character and can contain Arabic or Latin characters, digits, and underscores(_)."
                                                    }
                                                },
                                                "last_name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The last name must start with an Arabic or Latin character and can contain Arabic or Latin characters, digits, and underscores(_)."
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email address has already been taken."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "An unexpected error occurred, Please try again later."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{role}/settings/password": {
            "post": {
                "tags": [
                    "Settings"
                ],
                "summary": "Set Password",
                "description": "Add password if account hasn’t password",
                "operationId": "setPassword",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (user, admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "user",
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "password": {
                                        "description": "Required. Must contain at least one lowercase letter, one uppercase letter, one numeric digit, and one special character (*, @, ., -, +, #, &). Length: min=8, max=20.",
                                        "type": "string",
                                        "example": "Ali@333222"
                                    },
                                    "password_confirmation": {
                                        "description": "Must match the password.",
                                        "type": "string",
                                        "example": "Ali@333222"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Add password to account successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "The password added to your account successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "properties": {
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password must contain at least one lowercase letter, one uppercase letter, one numeric digit, and one special character."
                                                    }
                                                },
                                                "password_confirmation": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password confirmation must match the password."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "if account has already been password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "The password has already been added."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 409
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Settings"
                ],
                "summary": "Update Password",
                "operationId": "updatePassword",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (user, admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "user",
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "current_password": {
                                        "description": "Required. Length: min=8, max=20.",
                                        "type": "string",
                                        "example": "Ali@333222"
                                    },
                                    "new_password": {
                                        "description": "Required. Must contain at least one lowercase letter, one uppercase letter, one numeric digit, and one special character (*, @, ., -, +, #, &). Length: min=8, max=20.",
                                        "type": "string",
                                        "example": "AliHasan@333222"
                                    },
                                    "new_password_confirmation": {
                                        "description": "Must match the new_password.",
                                        "type": "string",
                                        "example": "AliHasan@333222"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update password successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "The password updated successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "properties": {
                                                "current_password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field is required."
                                                    }
                                                },
                                                "new_password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password must contain at least one lowercase letter, one uppercase letter, one numeric digit, and one special character."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired or current password is incorrect.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{role}/notifications": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "List Of All Notifications",
                "operationId": "getAllNotifications",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (user, admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "user",
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get all notifications with pagination successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "All notifications fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "notifications": {
                                            "description": "List of notifications",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "87755360-b9b8-4077-824d-27045dd9cddd"
                                                    },
                                                    "data": {
                                                        "description": "Dynamic notification data",
                                                        "properties": {
                                                            "message": {
                                                                "type": "string",
                                                                "example": "تم دفع فاتورة جديدة بنجاح."
                                                            }
                                                        },
                                                        "type": "object",
                                                        "additionalProperties": {
                                                            "type": "string",
                                                            "example": "value"
                                                        }
                                                    },
                                                    "read": {
                                                        "type": "string",
                                                        "enum": [
                                                            "yes",
                                                            "no"
                                                        ],
                                                        "example": "yes"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-01-11T20:48:46.000000Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "meta": {
                                                    "properties": {
                                                        "currentPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "lastPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "perPage": {
                                                            "type": "integer",
                                                            "example": 20
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 5
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "links": {
                                                    "properties": {
                                                        "currentPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        },
                                                        "previousPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "nextPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "lastPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{role}/notifications/unread": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "List Of Unread Notifications",
                "operationId": "getUnreadNotifications",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (user, admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "user",
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get unread notifications with pagination successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unread notifications fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "notifications": {
                                            "description": "List of unread notifications",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "87755360-b9b8-4077-824d-27045dd9cddd"
                                                    },
                                                    "data": {
                                                        "description": "Dynamic notification data",
                                                        "properties": {
                                                            "message": {
                                                                "type": "string",
                                                                "example": "تم دفع فاتورة جديدة بنجاح."
                                                            }
                                                        },
                                                        "type": "object",
                                                        "additionalProperties": {
                                                            "type": "string",
                                                            "example": "value"
                                                        }
                                                    },
                                                    "read": {
                                                        "description": "must take only no",
                                                        "type": "string",
                                                        "enum": [
                                                            "yes",
                                                            "no"
                                                        ],
                                                        "example": "no"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-01-11T20:48:46.000000Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "meta": {
                                                    "properties": {
                                                        "currentPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "lastPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "perPage": {
                                                            "type": "integer",
                                                            "example": 20
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 5
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "links": {
                                                    "properties": {
                                                        "currentPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        },
                                                        "previousPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "nextPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "lastPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{role}/notifications/unread/{id}/mark_as_read": {
            "patch": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Mark Notification As Read",
                "operationId": "markNotificationAsRead",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (user, admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "user",
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The notification ID to make it readable",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The notification marked as read successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "The notification read successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Notification not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unread notification not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{role}/notifications/unread/mark_as_read": {
            "patch": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Mark All Unread Notifications As Read",
                "operationId": "markNotificationsAsRead",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role (user, admin, super_admin)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "user",
                                "admin",
                                "super_admin"
                            ]
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All notifications marked as read successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "All unread notifications read successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Unread notifications not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unread notifications not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/super_admin/dashboard/invoices": {
            "get": {
                "tags": [
                    "Dashboard/Invoices"
                ],
                "summary": "Get List Of Invoices",
                "description": "Get all invoices for with 10 pagination",
                "operationId": "getInvoices",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "Filter by user ID.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "paid",
                                "pending",
                                "cancelled"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get invoices successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "All invoices fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "invoices": {
                                            "description": "List of invoices",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "start_date": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-01-12T00:00:00.000000Z"
                                                    },
                                                    "end_date": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-02-22T00:00:00.000000Z"
                                                    },
                                                    "count_month": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "count_day": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "total_cost": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 120.67
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "paid",
                                                            "pending",
                                                            "cancelled"
                                                        ],
                                                        "example": "paid"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-10-20T12:26:39.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-11-17T12:17:20.000000Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "meta": {
                                                    "properties": {
                                                        "currentPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "lastPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "perPage": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 5
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "links": {
                                                    "properties": {
                                                        "currentPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        },
                                                        "previousPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "nextPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "lastPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No invoices found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "No invoices found matching the given criteria."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable perform this action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Super Admins only can perform this action."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/super_admin/dashboard/invoices/{id}": {
            "get": {
                "tags": [
                    "Dashboard/Invoices"
                ],
                "summary": "Show Invoice",
                "description": "Get invoice",
                "operationId": "showInvoice",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get invoice successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Invoice fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "invoice": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "start_date": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-01-12T00:00:00.000000Z"
                                                    },
                                                    "end_date": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-02-22T00:00:00.000000Z"
                                                    },
                                                    "count_month": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "count_day": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "total_cost": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 120.67
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "paid",
                                                            "pending",
                                                            "cancelled"
                                                        ],
                                                        "example": "paid"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-10-20T12:26:39.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-11-17T12:17:20.000000Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Invoice not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable perform this action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Super Admins only can perform this action."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/super_admin/dashboard/invoices/{id}/bookings": {
            "get": {
                "tags": [
                    "Dashboard/Invoices"
                ],
                "summary": "Get List Of Bookings For Invoice",
                "description": "Get all bookings for invoice with 10 pagination",
                "operationId": "getBookingsInvoice",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get bookings for this invoice successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "All bookings for this invoice fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "bookings": {
                                            "description": "List of bookings",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "invoice_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "bookingable_type": {
                                                        "type": "string",
                                                        "example": "service"
                                                    },
                                                    "bookingable_id": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "original_monthly_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 234.55
                                                    },
                                                    "original_daily_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 2345.89
                                                    },
                                                    "booking_cost": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 666676.78
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "meta": {
                                                    "properties": {
                                                        "currentPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "lastPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "perPage": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 5
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "links": {
                                                    "properties": {
                                                        "currentPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        },
                                                        "previousPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "nextPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "lastPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Invoice not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable perform this action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Super Admins only can perform this action."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/super_admin/dashboard/rooms/deleted": {
            "get": {
                "tags": [
                    "Dashboard/Rooms"
                ],
                "summary": "Get List Of Deleted Rooms",
                "description": "Get all deleted rooms with 10 pagination",
                "operationId": "getDeletedRooms",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Filter by number.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "floor",
                        "in": "query",
                        "description": "Filter by floor",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "view",
                        "in": "query",
                        "description": "Filter by view",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get deleted rooms successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Deleted rooms fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "rooms": {
                                            "description": "List of deleted rooms",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "room_type_id": {
                                                        "type": "integer",
                                                        "example": 23
                                                    },
                                                    "floor": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "number": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "view": {
                                                        "type": "string",
                                                        "example": "Sea view"
                                                    },
                                                    "image": {
                                                        "type": "string",
                                                        "example": "\\/storage\\/Image\\/rooms\\/1733570972_202858.jpg"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "dddddddddddddddddddddddddddddddddddddddddd"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "meta": {
                                                    "properties": {
                                                        "currentPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "lastPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "perPage": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 5
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "links": {
                                                    "properties": {
                                                        "currentPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        },
                                                        "previousPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "nextPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "lastPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No deleted rooms found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "No deleted rooms found matching the given criteria."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable perform this action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Super Admins only can perform this action."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/super_admin/dashboard/rooms/deleted/{id}": {
            "get": {
                "tags": [
                    "Dashboard/Rooms"
                ],
                "summary": "Show Deleted Room",
                "description": "Get deleted room",
                "operationId": "showDeletedRoom",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Room ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get deleted room successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Deleted room fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "room": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "room_type_id": {
                                                    "type": "integer",
                                                    "example": 23
                                                },
                                                "floor": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "view": {
                                                    "type": "string",
                                                    "example": "Sea view"
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "\\/storage\\/Image\\/rooms\\/1733570972_202858.jpg"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "dddddddddddddddddddddddddddddddddddddddddd"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Room not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable perform this action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Super Admins only can perform this action."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/super_admin/dashboard/rooms/deleted/{id}/restore": {
            "post": {
                "tags": [
                    "Dashboard/Rooms"
                ],
                "summary": "Restore Deleted Room",
                "description": "Restore deleted room",
                "operationId": "restoreDeletedRoom",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Room ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted room restored from deletion successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Deleted room restored from deletion successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Room not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable perform this action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Super Admins only can perform this action."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unable to restore this room type."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/super_admin/dashboard/rooms/deleted/{id}/force": {
            "delete": {
                "tags": [
                    "Dashboard/Rooms"
                ],
                "summary": "Force Delete Room",
                "description": "Force delete room",
                "operationId": "forceDeleteRoom",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Room ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Room permanently deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room permanently deleted successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Room not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable perform this action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Super Admins only can perform this action."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unable to permanently delete this room."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/super_admin/dashboard/rooms/{id}/bookings": {
            "get": {
                "tags": [
                    "Dashboard/Rooms"
                ],
                "summary": "Get List Of Bookings For Room",
                "description": "Get all bookings for room with 10 pagination",
                "operationId": "getBookingsRoom",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Room ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get bookings for this room successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Bookings for this room fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "bookings": {
                                            "description": "List of bookings",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "invoice_id": {
                                                        "type": "integer",
                                                        "example": 12
                                                    },
                                                    "bookingable_type": {
                                                        "type": "string",
                                                        "example": "room"
                                                    },
                                                    "bookingable_id": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "original_monthly_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 234.55
                                                    },
                                                    "original_daily_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 2345.89
                                                    },
                                                    "booking_cost": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 666676.78
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "meta": {
                                                    "properties": {
                                                        "currentPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "lastPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "perPage": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 5
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "links": {
                                                    "properties": {
                                                        "currentPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        },
                                                        "previousPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "nextPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "lastPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Room not found or No bookings found for this room",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "No bookings found for this room."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable perform this action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Super Admins only can perform this action."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/super_admin/dashboard/room_types/deleted": {
            "get": {
                "tags": [
                    "Dashboard/RoomTypes"
                ],
                "summary": "Get List Of Deleted Room Types",
                "description": "Get all deleted room types with 10 pagination",
                "operationId": "getDeletedRoomTypes",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "capacity",
                        "in": "query",
                        "description": "Filter by capacity",
                        "required": false,
                        "schema": {
                            "description": "Get room types that have a capacity greater than or equal to the given value",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter by category",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get deleted room types successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Deleted room types fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "roomTypes": {
                                            "description": "List of deleted room types",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "royal rooms"
                                                    },
                                                    "category": {
                                                        "type": "string",
                                                        "example": "master"
                                                    },
                                                    "capacity": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "image": {
                                                        "type": "string",
                                                        "example": "\\/storage\\/Image\\/room_types\\/1733570972_202858.jpg"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "dddddddddddddddddddddddddddddddddddddddddd"
                                                    },
                                                    "count_rooms": {
                                                        "type": "integer",
                                                        "example": 4
                                                    },
                                                    "daily_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 12222.45
                                                    },
                                                    "monthly_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 33333
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "meta": {
                                                    "properties": {
                                                        "currentPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "lastPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "perPage": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 5
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "links": {
                                                    "properties": {
                                                        "currentPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        },
                                                        "previousPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "nextPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "lastPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No deleted room types found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "No deleted room types found matching the given criteria."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable perform this action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Super Admins only can perform this action."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/super_admin/dashboard/room_types/deleted/{id}": {
            "get": {
                "tags": [
                    "Dashboard/RoomTypes"
                ],
                "summary": "Show Deleted Room Type",
                "description": "Get deleted room type",
                "operationId": "showDeletedRoomType",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Room type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get deleted room type successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Deleted room type fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "roomType": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "royal rooms"
                                                },
                                                "category": {
                                                    "type": "string",
                                                    "example": "master"
                                                },
                                                "capacity": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "\\/storage\\/Image\\/room_types\\/1733570972_202858.jpg"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "dddddddddddddddddddddddddddddddddddddddddd"
                                                },
                                                "count_rooms": {
                                                    "type": "integer",
                                                    "example": 4
                                                },
                                                "daily_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 12222.45
                                                },
                                                "monthly_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 33333
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Room type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room type not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable perform this action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Super Admins only can perform this action."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/super_admin/dashboard/room_types/deleted/{id}/restore": {
            "post": {
                "tags": [
                    "Dashboard/RoomTypes"
                ],
                "summary": "Restore Deleted Room Type",
                "description": "Restore deleted room type",
                "operationId": "restoreDeletedRoomType",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Room type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted room type restored from deletion successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Deleted room type restored from deletion successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Room type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room type not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable perform this action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Super Admins only can perform this action."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unable to restore this room type."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/super_admin/dashboard/room_types/deleted/{id}/force": {
            "delete": {
                "tags": [
                    "Dashboard/RoomTypes"
                ],
                "summary": "Force Delete Room Type",
                "description": "Force delete room type",
                "operationId": "forceDeleteRoomType",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Room type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Room type permanently deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room type permanently deleted successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Room type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room type not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable perform this action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Super Admins only can perform this action."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unable to permanently delete this room type."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/super_admin/dashboard/services/deleted": {
            "get": {
                "tags": [
                    "Dashboard/Services"
                ],
                "summary": "Get List Of Deleted Services",
                "description": "Get all deleted services with 10 pagination",
                "operationId": "getDeletedServices",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "is_limited",
                        "in": "query",
                        "description": "Filter by limited.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                1,
                                0
                            ]
                        }
                    },
                    {
                        "name": "is_free",
                        "in": "query",
                        "description": "Filter by free",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                1,
                                0
                            ]
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter by category",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get deleted services successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Deleted services fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "services": {
                                            "description": "List of deleted services",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "parking service"
                                                    },
                                                    "category": {
                                                        "type": "string",
                                                        "example": "cars"
                                                    },
                                                    "image": {
                                                        "type": "string",
                                                        "example": "\\/storage\\/Image\\/services\\/1733570972_202858.jpg"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "dddddddddddddddddddddddddddddddddddddddddd"
                                                    },
                                                    "is_limited": {
                                                        "type": "boolean",
                                                        "example": 1
                                                    },
                                                    "total_units": {
                                                        "description": "Total units for service if its limited",
                                                        "type": "integer",
                                                        "example": 7
                                                    },
                                                    "is_free": {
                                                        "type": "boolean",
                                                        "example": 1
                                                    },
                                                    "daily_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 12222.45
                                                    },
                                                    "monthly_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 33333.09
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "meta": {
                                                    "properties": {
                                                        "currentPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "lastPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "perPage": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 5
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "links": {
                                                    "properties": {
                                                        "currentPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        },
                                                        "previousPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "nextPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "lastPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No deleted services found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "No deleted services found matching the given criteria."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable perform this action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Super Admins only can perform this action."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/super_admin/dashboard/services/deleted/{id}": {
            "get": {
                "tags": [
                    "Dashboard/Services"
                ],
                "summary": "Show Deleted Service",
                "description": "Get deleted service",
                "operationId": "showDeletedService",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get deleted service successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Deleted service fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "room": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "parking service"
                                                },
                                                "category": {
                                                    "type": "string",
                                                    "example": "cars"
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "\\/storage\\/Image\\/services\\/1733570972_202858.jpg"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "dddddddddddddddddddddddddddddddddddddddddd"
                                                },
                                                "is_limited": {
                                                    "type": "boolean",
                                                    "example": 1
                                                },
                                                "total_units": {
                                                    "description": "Total units for service if its limited",
                                                    "type": "integer",
                                                    "example": 7
                                                },
                                                "is_free": {
                                                    "type": "boolean",
                                                    "example": 1
                                                },
                                                "daily_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 12222.45
                                                },
                                                "monthly_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 33333.09
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Service not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable perform this action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Super Admins only can perform this action."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/super_admin/dashboard/services/deleted/{id}/restore": {
            "post": {
                "tags": [
                    "Dashboard/Services"
                ],
                "summary": "Restore Deleted Service",
                "description": "Restore deleted service",
                "operationId": "restoreDeletedService",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted service restored from deletion successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Deleted service restored from deletion successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Service not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable perform this action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Super Admins only can perform this action."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unable to restore this service."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/super_admin/dashboard/services/deleted/{id}/force": {
            "delete": {
                "tags": [
                    "Dashboard/Services"
                ],
                "summary": "Force Delete Service",
                "description": "Force delete service",
                "operationId": "forceDeleteService",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service permanently deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Service permanently deleted successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Service not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable perform this action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Super Admins only can perform this action."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unable to permanently delete this service."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/super_admin/dashboard/services/{id}/bookings": {
            "get": {
                "tags": [
                    "Dashboard/Services"
                ],
                "summary": "Get List Of Bookings For Service",
                "description": "Get all bookings for service with 10 pagination",
                "operationId": "getBookingsService",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get bookings for this service successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Bookings for this service fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "bookings": {
                                            "description": "List of bookings",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "invoice_id": {
                                                        "type": "integer",
                                                        "example": 12
                                                    },
                                                    "bookingable_type": {
                                                        "type": "string",
                                                        "example": "service"
                                                    },
                                                    "bookingable_id": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "original_monthly_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 234.55
                                                    },
                                                    "original_daily_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 2345.89
                                                    },
                                                    "booking_cost": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 666676.78
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "meta": {
                                                    "properties": {
                                                        "currentPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "lastPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "perPage": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 5
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "links": {
                                                    "properties": {
                                                        "currentPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        },
                                                        "previousPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "nextPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "lastPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found or No bookings found for this service",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "No bookings found for this service."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable perform this action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Super Admins only can perform this action."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/super_admin/dashboard/users/{id}/assign_role": {
            "patch": {
                "tags": [
                    "Dashboard/Users"
                ],
                "summary": "Assign Role To User",
                "operationId": "assignRole",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The user ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "role": {
                                        "description": "Required. Must in ['user', 'admin', 'super_admin]",
                                        "type": "string",
                                        "example": "admin"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Assigne role successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "The role assigned to user successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "properties": {
                                                "role": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The role must be one of the following: [user, admin, super_admin]."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "User not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "This role has already been assigned to user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "This role has already been assigned to user."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 409
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable perform this action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Super Admins only can perform this action."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/bookings/calculate_cost": {
            "post": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Calculate Cost Of Booking",
                "description": "Calculate cost of booking",
                "operationId": "calculateCostBooking",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "description": "Booking details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "room_id",
                                    "start_date",
                                    "end_date"
                                ],
                                "properties": {
                                    "room_id": {
                                        "description": "Required. Must exist in the rooms table. Must room available during the specified period.",
                                        "type": "integer",
                                        "example": 23
                                    },
                                    "services": {
                                        "description": "Nullable. Must unique",
                                        "type": "array",
                                        "items": {
                                            "description": "Must exist in the services table. Must assign to room type. Must service own units during the specified period(if it’s limited).",
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "start_date": {
                                        "description": "Required. Must be a valid date in Y-m-d format and must be after today's date.",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-12-01"
                                    },
                                    "end_date": {
                                        "description": "Required. Must be a valid date in Y-m-d format and must be after the start_date.",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-12-10"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Total cost calculate successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "The total cost for the booking calculate successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "bookingCost": {
                                            "properties": {
                                                "total_cost": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 709.01
                                                },
                                                "room_cost": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 709.01
                                                },
                                                "services_cost": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 0
                                                },
                                                "count_month": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "count_day": {
                                                    "type": "integer",
                                                    "example": 12
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "properties": {
                                                "room_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The provided room type does not exist in our records."
                                                    }
                                                },
                                                "services": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must be an array."
                                                    }
                                                },
                                                "services.1": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The provided service does not exist in our records."
                                                    }
                                                },
                                                "service_id => 1": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This service not assign to room type."
                                                    }
                                                },
                                                "start_date": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The start date must be after today."
                                                    }
                                                },
                                                "end_date": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The end date must be after start date."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable access this section",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "You don’t have permission to access this section."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/bookings/payment_intent": {
            "post": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Payment Intent Booking",
                "description": "Payment intent booking",
                "operationId": "paymentIntentBooking",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "description": "Booking details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "room_id",
                                    "start_date",
                                    "end_date",
                                    "payment_method_id"
                                ],
                                "properties": {
                                    "room_id": {
                                        "description": "Required. Must exist in the rooms table. Must room available during the specified period.",
                                        "type": "integer",
                                        "example": 23
                                    },
                                    "services": {
                                        "description": "Nullable. Must unique",
                                        "type": "array",
                                        "items": {
                                            "description": "Must exist in the services table. Must assign to room type. Must service own units during the specified period(if it’s limited).",
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "start_date": {
                                        "description": "Required. Must be a valid date in Y-m-d format and must be after today's date.",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-12-01"
                                    },
                                    "end_date": {
                                        "description": "Required. Must be a valid date in Y-m-d format and must be after the start_date.",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-12-10"
                                    },
                                    "payment_method_id": {
                                        "description": "Required. Must be start with (pm_) and contain only letters, numbers, and underscores(_). Length: min=10.",
                                        "type": "string",
                                        "example": "pm_jonnjbbbb_polkkm8_op9"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Payment initiated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Payment initiated successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "paymentInformation": {
                                            "properties": {
                                                "payment_id": {
                                                    "type": "string",
                                                    "example": "pi_ghuk_kjhjj_kkjjnn_io"
                                                },
                                                "client_secret": {
                                                    "type": "string",
                                                    "example": "lkkij09iijnij"
                                                },
                                                "total_cost": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 709.01
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "properties": {
                                                "room_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The provided room type does not exist in our records."
                                                    }
                                                },
                                                "services": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This field must be an array."
                                                    }
                                                },
                                                "services.1": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The provided service does not exist in our records."
                                                    }
                                                },
                                                "service_id => 1": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This service not assign to room type."
                                                    }
                                                },
                                                "start_date": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The start date must be after today."
                                                    }
                                                },
                                                "end_date": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The end date must be after start date."
                                                    }
                                                },
                                                "payment_method_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The payment method ID must start with (pm_) and contain only letters, numbers, and underscores(_)."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable access this section",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "You don’t have permission to access this section."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unexpected error occurred during payment, Please try again later."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/bookings/confirm_payment": {
            "post": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Confirm Payment Booking",
                "description": "Confirm payment booking",
                "operationId": "ConfirmpaymentBooking",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "description": "Confirm booking details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "payment_id",
                                    "payment_status"
                                ],
                                "properties": {
                                    "payment_id": {
                                        "description": "Required. Must be start with (pi_) and contain only letters, numbers, and underscores(_). Length: min=10.",
                                        "type": "string",
                                        "example": "pi_jonnjbbbb_polkkm8_op9"
                                    },
                                    "payment_status": {
                                        "description": "Required. Must be one of the following: [succeeded, failed].",
                                        "type": "string",
                                        "enum": [
                                            "succeeded",
                                            "failed"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment confirmed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Payment confirmed successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "properties": {
                                                "payment_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The payment ID must start with (pi_) and contain only letters, numbers, and underscores(_)."
                                                    }
                                                },
                                                "payment_status": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The status must be one of the following: [succeeded, failed]."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable access this section",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "You don’t have permission to access this section."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Payment failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Payment failed, Booking has been cancelled."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Invoice not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "The invoice status not pending.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "The invoice status not pending."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 409
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unexpected error occurred during confirm payment, Please try again later."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/invoices": {
            "get": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Get List Of Invoices",
                "description": "Get all invoices for user with 10 pagination",
                "operationId": "getUserInvoices",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "paid",
                                "pending",
                                "cancelled"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get invoices successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "All your invoices fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "invoices": {
                                            "description": "List of invoices",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "start_date": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-01-12T00:00:00.000000Z"
                                                    },
                                                    "end_date": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-02-22T00:00:00.000000Z"
                                                    },
                                                    "count_month": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "count_day": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "total_cost": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 120.67
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "paid",
                                                            "pending",
                                                            "cancelled"
                                                        ],
                                                        "example": "paid"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-10-20T12:26:39.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-11-17T12:17:20.000000Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "meta": {
                                                    "properties": {
                                                        "currentPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "lastPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "perPage": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 5
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "links": {
                                                    "properties": {
                                                        "currentPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        },
                                                        "previousPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "nextPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "lastPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No invoices found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "You dont have any invoice."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable access this section",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "You don’t have permission to access this section."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/invoices/{id}": {
            "get": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Show Invoice",
                "description": "Get user invoice",
                "operationId": "showUserInvoice",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get invoice successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Your invoice fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "invoice": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "start_date": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-01-12T00:00:00.000000Z"
                                                    },
                                                    "end_date": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-02-22T00:00:00.000000Z"
                                                    },
                                                    "count_month": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "count_day": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "total_cost": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 120.67
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "paid",
                                                            "pending",
                                                            "cancelled"
                                                        ],
                                                        "example": "paid"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-10-20T12:26:39.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-11-17T12:17:20.000000Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Invoice not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable access this section",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "You don’t have permission to access this section."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/invoices/{id}/bookings": {
            "get": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Get List Of Bookings For Invoice",
                "description": "Get all bookings for user invoice with 10 pagination",
                "operationId": "getUserBookingsInvoice",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get bookings for this invoice successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "All bookings for your invoice fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "bookings": {
                                            "description": "List of bookings",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "invoice_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "bookingable_type": {
                                                        "type": "string",
                                                        "example": "service"
                                                    },
                                                    "bookingable_id": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "original_monthly_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 234.55
                                                    },
                                                    "original_daily_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 2345.89
                                                    },
                                                    "booking_cost": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 666676.78
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "meta": {
                                                    "properties": {
                                                        "currentPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "lastPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "perPage": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 5
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "links": {
                                                    "properties": {
                                                        "currentPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        },
                                                        "previousPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "nextPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "lastPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Invoice not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable access this section",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "You don’t have permission to access this section."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/rooms/favorite": {
            "get": {
                "tags": [
                    "Rooms"
                ],
                "summary": "Get List Of Favorite Rooms",
                "description": "Get all favorite rooms of user with 10 pagination",
                "operationId": "getFavoriteRooms",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get favorite rooms successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Favorite rooms fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "rooms": {
                                            "description": "List of rooms",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "room_type_id": {
                                                        "type": "integer",
                                                        "example": 23
                                                    },
                                                    "floor": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "number": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "view": {
                                                        "type": "string",
                                                        "example": "Sea view"
                                                    },
                                                    "image": {
                                                        "type": "string",
                                                        "example": "\\/storage\\/Image\\/rooms\\/1733570972_202858.jpg"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "dddddddddddddddddddddddddddddddddddddddddd"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "meta": {
                                                    "properties": {
                                                        "currentPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "lastPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "perPage": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 5
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "links": {
                                                    "properties": {
                                                        "currentPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        },
                                                        "previousPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "nextPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "lastPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not rooms found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "The favorites list does not contain any rooms."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable access this section",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "You don’t have permission to access this section."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/rooms/{id}/favorite/mark_as_favorite": {
            "post": {
                "tags": [
                    "Rooms"
                ],
                "summary": "Mark Room As Favorite",
                "operationId": "markRoomAsFavorite",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Room ID to make it favorite",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Room added to favorites successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room added to favorites successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found room",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Room has already been added to favorites",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room has already been added to favorites."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 409
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable access this section",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "You don’t have permission to access this section."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/rooms/{id}/favorite/unmark_as_favorite": {
            "delete": {
                "tags": [
                    "Rooms"
                ],
                "summary": "Unmark Room As Favorite",
                "operationId": "unmarkRoomAsFavorite",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Room ID to delete from favorites",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Room deleted from favorites successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room deleted from favorites successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found room",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Room not in favorites.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room not in favorites."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 409
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable access this section",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "You don’t have permission to access this section."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/room_types/favorite": {
            "get": {
                "tags": [
                    "Room Types"
                ],
                "summary": "Get List Of Favorite Room Types",
                "description": "Get all favorite room types of user with 10 pagination",
                "operationId": "getFavoriteRoomTypes",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get favorite room types successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Favorite room types fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "roomTypes": {
                                            "description": "List of room types",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "royal rooms"
                                                    },
                                                    "category": {
                                                        "type": "string",
                                                        "example": "master"
                                                    },
                                                    "capacity": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "image": {
                                                        "type": "string",
                                                        "example": "\\/storage\\/Image\\/room_types\\/1733570972_202858.jpg"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "dddddddddddddddddddddddddddddddddddddddddd"
                                                    },
                                                    "count_rooms": {
                                                        "type": "integer",
                                                        "example": 4
                                                    },
                                                    "daily_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 12222.45
                                                    },
                                                    "monthly_price": {
                                                        "type": "number",
                                                        "format": "date-time",
                                                        "example": 33333,
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "meta": {
                                                    "properties": {
                                                        "currentPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "lastPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "perPage": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 5
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "links": {
                                                    "properties": {
                                                        "currentPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        },
                                                        "previousPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "nextPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "lastPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not room types found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "The favorites list doesn’t contain any room type."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable access this section",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "You don’t have permission to access this section."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/room_types/{id}/favorite/mark_as_favorite": {
            "post": {
                "tags": [
                    "Room Types"
                ],
                "summary": "Mark Room Type As Favorite",
                "operationId": "markRoomTypeAsFavorite",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Room type ID to make it favorite",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Room type added to favorites successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room type added to favorites successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found room type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room type not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Room type has already been added to favorites",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room type has already been added to favorites."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 409
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable access this section",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "You don’t have permission to access this section."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/room_types/{id}/favorite/unmark_as_favorite": {
            "delete": {
                "tags": [
                    "Room Types"
                ],
                "summary": "Unmark Room Type As Favorite",
                "operationId": "unmarkRoomTypeAsFavorite",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Room type ID to delete from favorites",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Room type deleted from favorites successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room type deleted from favorites successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found room type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room type not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Room type not in favorites.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Room type not in favorites."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 409
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable access this section",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "You don’t have permission to access this section."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/services/favorite": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get List Of Favorite Services",
                "description": "Get all favorite services of user with 10 pagination",
                "operationId": "getFavoriteServices",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get favorite services successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Favorite services fetched successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "services": {
                                            "description": "List of services",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "parking service"
                                                    },
                                                    "category": {
                                                        "type": "string",
                                                        "example": "cars"
                                                    },
                                                    "image": {
                                                        "type": "string",
                                                        "example": "\\/storage\\/Image\\/services\\/1733570972_202858.jpg"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "dddddddddddddddddddddddddddddddddddddddddd"
                                                    },
                                                    "is_limited": {
                                                        "type": "boolean",
                                                        "example": 1
                                                    },
                                                    "total_units": {
                                                        "description": "Total units for service if its limited",
                                                        "type": "integer",
                                                        "example": 7
                                                    },
                                                    "is_free": {
                                                        "type": "boolean",
                                                        "example": 1
                                                    },
                                                    "daily_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 12222.45
                                                    },
                                                    "monthly_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 33333.09
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "meta": {
                                                    "properties": {
                                                        "currentPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "lastPage": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "perPage": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 5
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "links": {
                                                    "properties": {
                                                        "currentPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        },
                                                        "previousPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "nextPageUrl": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "lastPageUrl": {
                                                            "type": "string",
                                                            "example": "http://127.0.0.1:8000/api/notifications?page=1"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No services found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "The favorites list does not contain any services."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable access this section",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "You don’t have permission to access this section."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/services/{id}/favorite/mark_as_favorite": {
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "Mark Service As Favorite",
                "operationId": "markServiceAsFavorite",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service ID to make it favorite",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Service added to favorites successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Service added to favorites successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found service",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Service not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Service has already been added to favorites",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Service has already been added to favorites."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 409
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable access this section",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "You don’t have permission to access this section."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/services/{id}/favorite/unmark_as_favorite": {
            "delete": {
                "tags": [
                    "Services"
                ],
                "summary": "Unmark Service As Favorite",
                "operationId": "unmarkServiceAsFavorite",
                "parameters": [
                    {
                        "name": "Accept-language",
                        "in": "header",
                        "description": "Set the language for the response (e.g., 'en' for English, 'ar' for Arabic)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service ID to delete from favorites",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service deleted from favorites successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Service deleted from favorites successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found service",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Service not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Service not in favorites.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Service not in favorites."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 409
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unable access this section",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "You don’t have permission to access this section."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid token or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthorized: Your session is invalid, Please log in again."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "JWT Bearer Authentication",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Dashboard/Rooms",
            "description": "Dashboard/Rooms"
        },
        {
            "name": "Dashboard/RoomTypes",
            "description": "Dashboard/RoomTypes"
        },
        {
            "name": "Dashboard/RoomTypeServices",
            "description": "Dashboard/RoomTypeServices"
        },
        {
            "name": "Dashboard/Services",
            "description": "Dashboard/Services"
        },
        {
            "name": "Dashboard/Users",
            "description": "Dashboard/Users"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Rooms",
            "description": "Rooms"
        },
        {
            "name": "Room Types",
            "description": "Room Types"
        },
        {
            "name": "Services",
            "description": "Services"
        },
        {
            "name": "Settings",
            "description": "Settings"
        },
        {
            "name": "Notifications",
            "description": "Notifications"
        },
        {
            "name": "Dashboard/Invoices",
            "description": "Dashboard/Invoices"
        },
        {
            "name": "Bookings",
            "description": "Bookings"
        },
        {
            "name": "Invoices",
            "description": "Invoices"
        }
    ]
}